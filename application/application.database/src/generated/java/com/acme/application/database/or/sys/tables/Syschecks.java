/*
 * This file is generated by jOOQ.
*/
package com.acme.application.database.or.sys.tables;


import com.acme.application.database.or.sys.Sys;
import com.acme.application.database.or.sys.tables.records.SyschecksRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Syschecks extends TableImpl<SyschecksRecord> {

    private static final long serialVersionUID = -570110230;

    /**
     * The reference instance of <code>SYS.SYSCHECKS</code>
     */
    public static final Syschecks SYSCHECKS = new Syschecks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SyschecksRecord> getRecordType() {
        return SyschecksRecord.class;
    }

    /**
     * The column <code>SYS.SYSCHECKS.CONSTRAINTID</code>.
     */
    public final TableField<SyschecksRecord, String> CONSTRAINTID = createField("CONSTRAINTID", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>SYS.SYSCHECKS.CHECKDEFINITION</code>.
     */
    public final TableField<SyschecksRecord, String> CHECKDEFINITION = createField("CHECKDEFINITION", org.jooq.impl.SQLDataType.LONGVARCHAR.nullable(false), this, "");

    /**
     * The column <code>SYS.SYSCHECKS.REFERENCEDCOLUMNS</code>.
     */
    public final TableField<SyschecksRecord, Object> REFERENCEDCOLUMNS = createField("REFERENCEDCOLUMNS", org.jooq.impl.DefaultDataType.getDefaultDataType("org.apache.derby.catalog.ReferencedColumns"), this, "");

    /**
     * Create a <code>SYS.SYSCHECKS</code> table reference
     */
    public Syschecks() {
        this("SYSCHECKS", null);
    }

    /**
     * Create an aliased <code>SYS.SYSCHECKS</code> table reference
     */
    public Syschecks(String alias) {
        this(alias, SYSCHECKS);
    }

    private Syschecks(String alias, Table<SyschecksRecord> aliased) {
        this(alias, aliased, null);
    }

    private Syschecks(String alias, Table<SyschecksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Syschecks as(String alias) {
        return new Syschecks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Syschecks rename(String name) {
        return new Syschecks(name, null);
    }
}
