/*
 * This file is generated by jOOQ.
*/
package com.acme.application.database.or.sys.tables;


import com.acme.application.database.or.sys.Sys;
import com.acme.application.database.or.sys.tables.records.SysviewsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sysviews extends TableImpl<SysviewsRecord> {

    private static final long serialVersionUID = 1947830928;

    /**
     * The reference instance of <code>SYS.SYSVIEWS</code>
     */
    public static final Sysviews SYSVIEWS = new Sysviews();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysviewsRecord> getRecordType() {
        return SysviewsRecord.class;
    }

    /**
     * The column <code>SYS.SYSVIEWS.TABLEID</code>.
     */
    public final TableField<SysviewsRecord, String> TABLEID = createField("TABLEID", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>SYS.SYSVIEWS.VIEWDEFINITION</code>.
     */
    public final TableField<SysviewsRecord, String> VIEWDEFINITION = createField("VIEWDEFINITION", org.jooq.impl.SQLDataType.LONGVARCHAR.nullable(false), this, "");

    /**
     * The column <code>SYS.SYSVIEWS.CHECKOPTION</code>.
     */
    public final TableField<SysviewsRecord, String> CHECKOPTION = createField("CHECKOPTION", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>SYS.SYSVIEWS.COMPILATIONSCHEMAID</code>.
     */
    public final TableField<SysviewsRecord, String> COMPILATIONSCHEMAID = createField("COMPILATIONSCHEMAID", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * Create a <code>SYS.SYSVIEWS</code> table reference
     */
    public Sysviews() {
        this("SYSVIEWS", null);
    }

    /**
     * Create an aliased <code>SYS.SYSVIEWS</code> table reference
     */
    public Sysviews(String alias) {
        this(alias, SYSVIEWS);
    }

    private Sysviews(String alias, Table<SysviewsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sysviews(String alias, Table<SysviewsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Sysviews as(String alias) {
        return new Sysviews(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Sysviews rename(String name) {
        return new Sysviews(name, null);
    }
}
